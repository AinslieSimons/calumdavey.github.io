t.test(s1, s2)
s1 <- rnorm(1000, 1, .5)
s2 <- rnorm(1000, 1.005, .5)
t.test(s1, s2)
s1 <- rnorm(1000, 1, .5)
s2 <- rnorm(1000, 1.005, .5)
t.test(s1, s2)
s1 <- rnorm(1000, 1, .5)
s2 <- rnorm(1000, 1.005, .5)
t.test(s1, s2)
s1 <- rnorm(1000, 1, .5)
s2 <- rnorm(1000, 1.005, .5)
t.test(s1, s2)
s1 <- rnorm(1000, 1, .5)
s2 <- rnorm(1000, 1.005, .5)
t.test(s1, s2)
s1 <- rnorm(1000, 1, .5)
s2 <- rnorm(1000, 1.005, .5)
t.test(s1, s2)
s1 <- rnorm(1000, 1, .5)
s2 <- rnorm(1000, 1.005, .5)
t.test(s1, s2)
s1 <- rnorm(1000, 1, .5)
s2 <- rnorm(1000, 1.005, .5)
t.test(s1, s2)
s1 <- rnorm(1000, 1, .5)
s2 <- rnorm(1000, 1.005, .5)
t.test(s1, s2)
s1 <- rnorm(1000, 1, .5)
s2 <- rnorm(1000, 1.005, .5)
t.test(s1, s2)
s1 <- rnorm(1000, 1, .5)
s2 <- rnorm(1000, 1.005, .5)
t.test(s1, s2)
s1 <- rnorm(1000, 1, .5)
s2 <- rnorm(1000, 1.005, .5)
t.test(s1, s2)
s1 <- rnorm(1000, 1, .5)
s2 <- rnorm(1000, 1.005, .5)
t.test(s1, s2)
s1 <- rnorm(1000, 1, .5)
s2 <- rnorm(1000, 1.005, .5)
t.test(s1, s2)
s1 <- rnorm(1000, 1, .5)
s2 <- rnorm(1000, 1.005, .5)
t.test(s1, s2)
s1 <- rnorm(1000, 1, .5)
s2 <- rnorm(1000, 1.005, .5)
t.test(s1, s2)
s1 <- rnorm(1000, 1, .5)
s2 <- rnorm(1000, 1.005, .5)
t.test(s1, s2)
s1 <- rnorm(1000, 1, .5)
s2 <- rnorm(1000, 1.005, .5)
t.test(s1, s2)
s1 <- rnorm(1000, 1, .5)
s2 <- rnorm(1000, 1.005, .5)
t.test(s1, s2)
s1 <- rnorm(1000, 1, .5)
s2 <- rnorm(1000, 1.005, .5)
t.test(s1, s2)
s1 <- rnorm(1000, 1, .5)
s2 <- rnorm(1000, 1.005, .5)
t.test(s1, s2)
s1 <- rnorm(1000, 1, .5)
s2 <- rnorm(1000, 1.005, .5)
t.test(s1, s2)
s1 <- rnorm(1000, 1, .5)
s2 <- rnorm(1000, 1.005, .5)
t.test(s1, s2)
s1 <- rnorm(1000, 1, .5)
s2 <- rnorm(1000, 1.005, .5)
t.test(s1, s2)
s1 <- rnorm(1000, 1, .5)
s2 <- rnorm(1000, 1.005, .5)
t.test(s1, s2)
s1 <- rnorm(1000, 1, .5)
s2 <- rnorm(1000, 1.005, .5)
t.test(s1, s2)
s1 <- rnorm(1000, 1, .5)
s2 <- rnorm(1000, 1.005, .5)
t.test(s1, s2)
s1 <- rnorm(1000, 1, .5)
s2 <- rnorm(1000, 1.005, .5)
t.test(s1, s2)
s1 <- rnorm(1000, 1, .5)
s2 <- rnorm(1000, 1.005, .5)
t.test(s1, s2)
s1 <- rnorm(1000, 1, .5)
s2 <- rnorm(1000, 1.005, .5)
t.test(s1, s2)
s1 <- rnorm(1000, 1, .5)
s2 <- rnorm(1000, 1.005, .5)
t.test(s1, s2)
s1 <- rnorm(1000, 1, .5)
s2 <- rnorm(1000, 1.005, .5)
t.test(s1, s2)
s1 <- rnorm(1000, 1, .5)
s2 <- rnorm(1000, 1.005, .5)
t.test(s1, s2)
s1 <- rnorm(1000, 1, .5)
s2 <- rnorm(1000, 1.005, .5)
t.test(s1, s2)
t1 <- t.test(s1, s2)
t1$statistic
t1$p.value
i <- 1
while (i<1000){
s1 <- rnorm(1000, 1, .5)
s2 <- rnorm(1000, 1.005, .5)
t1 <- t.test(s1, s2)
t <- c(t, t1$p.value)
i <- i+1
}
hist(t)
t
t1$p.value
class(t1$p.value)
t <- c()
i <- 1
while (i<1000){
s1 <- rnorm(1000, 1, .5)
s2 <- rnorm(1000, 1.005, .5)
t1 <- t.test(s1, s2)
t <- c(t, t1$p.value)
i <- i+1
}
t
hist(t)
p <- c()
i <- 1
while (i<1000){
s1 <- rnorm(1000, 1, .5)
s2 <- rnorm(1000, 1.005, .5)
t1 <- t.test(s1, s2)
p <- c(p, t1$p.value)
i <- i+1
}
hist(t)
hist(p)
# Comparing two means
p <- c()
i <- 1
while (i<1000){
s1 <- rnorm(1000, 1, .5)
s2 <- rnorm(1000, 1.1, .5)
t1 <- t.test(s1, s2)
p <- c(p, t1$p.value)
i <- i+1
}
hist(p)
# Comparing two means
p <- c()
i <- 1
while (i<1000){
s1 <- rnorm(1000, 1, .5)
s2 <- rnorm(1000, 1.05, .5)
t1 <- t.test(s1, s2)
p <- c(p, t1$p.value)
i <- i+1
}
hist(p)
# Comparing two means
p <- c()
i <- 1
while (i<1000){
s1 <- rnorm(1000, 1, .5)
s2 <- rnorm(1000, 1.005, .5)
t1 <- t.test(s1, s2)
p <- c(p, t1$p.value)
i <- i+1
}
hist(p)
# Comparing two means
p <- c()
i <- 1
while (i<1000){
s1 <- rnorm(1000, 1, .5)
s2 <- rnorm(1000, 1.009, .5)
t1 <- t.test(s1, s2)
p <- c(p, t1$p.value)
i <- i+1
}
hist(p)
# Comparing two means
p <- c()
i <- 1
while (i<1000){
s1 <- rnorm(1000, 1, .5)
s2 <- rnorm(1000, 1.03, .5)
t1 <- t.test(s1, s2)
p <- c(p, t1$p.value)
i <- i+1
}
hist(p)
p <- c()
m <- c()
i <- 1
while (i<1000){
s1 <- rnorm(1000, 1, .5)
s2 <- rnorm(1000, 1.0, .5)
t1 <- t.test(s1, s2)
p <- c(p, t1$p.value)
m <- c(m, abs(mean(s1)- mean(s2)))
i <- i+1
}
hist(p)
hist(m)
p <- c()
m <- c()
i <- 1
while (i<1000){
s1 <- rnorm(1000, 1, .5)
s2 <- rnorm(1000, 1.04, .5)
t1 <- t.test(s1, s2)
p <- c(p, t1$p.value)
m <- c(m, abs(mean(s1)- mean(s2)))
i <- i+1
}
hist(p)
hist(m)
p <- c()
m <- c()
i <- 1
while (i<1000){
s1 <- rnorm(1000, 1, .5)
s2 <- rnorm(1000, 1.05, .5)
t1 <- t.test(s1, s2)
p <- c(p, t1$p.value)
m <- c(m, abs(mean(s1)- mean(s2)))
i <- i+1
}
hist(p)
hist(m)
install.packages('DAG')
install.packages('dagitty')
g <- daggity('dag(
D -> C -> F
I -> C
I -> D
I -> A
A -> D
p -> D
Z -> D
Z -> C
Z -> F
)
')
library(dagitty)
g <- daggity('dag(
D -> C -> F
I -> C
I -> D
I -> A
A -> D
p -> D
Z -> D
Z -> C
Z -> F
)
')
g <- dagitty('dag(
D -> C -> F
I -> C
I -> D
I -> A
A -> D
p -> D
Z -> D
Z -> C
Z -> F
)
')
g
plot(g)
plot(graphLayout(g))
plot(graphLayout(g))
g <- dagitty('dag{
D -> C -> F
I -> C
I -> D
I -> A
A -> D
p -> D
Z -> D
Z -> C
Z -> F
}
')
g <- dagitty('dag{
D -> C -> F
I -> C
I -> D
I -> A
A -> D
p -> D
Z -> D
Z -> C
Z -> F
}
')
plot(graphLayout(g))
g <- dagitty('dag {
A [pos='0,1']
I [pos='0,0']
p [pos='0,2']
D [pos='1,1']
C [pos='2,1']
F [pos='3,1']
Z [pos='2,0']
D -> C -> F
I -> C
I -> D
I -> A
A -> D
p -> D
Z -> D
Z -> C
Z -> F
}
')
g <- dagitty('dag {
A [pos="0,1"]
I [pos="0,0"]
p [pos="0,2"]
D [pos="1,1"]
C [pos="2,1"]
F [pos="3,1"]
Z [pos="2,0"]
D -> C -> F
I -> C
I -> D
I -> A
A -> D
p -> D
Z -> D
Z -> C
Z -> F
}
')
g <- dagitty('dag {
A [pos="0,1"]
I [pos="0,0"]
p [pos="0,2"]
D [pos="1,1"]
C [pos="2,1"]
F [pos="3,1"]
Z [pos="2,0"]
D -> C -> F
I -> C
I -> D
I -> A
A -> D
p -> D
Z -> D
Z -> C
Z -> F
}')
plot(g)
plot(graphLayout(g))
g <- dagitty('dag {
A [pos="0,1"]
I [pos="0,0"]
p [pos="0,2"]
D [pos="1,1"]
C [pos="2,1"]
F [pos="3,1"]
Z [pos="2,0"]
D -> C -> F
I -> C
I -> D
I -> A
A -> D
p -> D
Z -> D
Z -> C
Z -> F
}')
plot(g)
install.packages('tufte')
library('dplyr')
library('dagitty')
# Create a DAG
g <- dagitty( "dag {
M0 -> M1 -> M2 -> M3 -> Y3
Y0 -> Y1 -> Y2 -> M3
M0 -> Y0 -> M1 -> Y1
M0 -> Y1 -> M2 -> Y3
M1 -> Y2 -> Y3
M2 -> Y2
Z0 -> M0
Z0 -> Y0
Z1 -> M1
Z1 -> Y1
Z2 -> M2
Z2 -> Y2
Z3 -> M3
Z3 -> Y3
M0 <- V -> Y0
}")
coordinates(g) <- list(x=c(M0=1,M1=2,M2=3,M3=4,
Y0=1,Y1=2,Y2=3,Y3=4,
Z0=.75,Z1=1.75,Z2=2.75,Z3=3.75,
#W0=1.5,W1=2.5,W2=3.5,W3=4.25,
V=.5),
y=c(M0=1,M1=1,M2=1,M3=1,
Y0=2,Y1=2,Y2=2,Y3=2,
Z0=1.5,Z1=1.5,Z2=1.5,Z3=1.5,
#W0=1.2,W1=1.2,W2=1.2,W3=1.2,
V=1.5))
plot(g)
# M0 -> W0 -> Y0
# W0 -> M1
# M1 -> W1 -> Y1
# W1 -> M2
# M2 -> W2 -> Y2
# W2 -> M3
# M3 -> W3 -> Y3
knit_with_parameters('~/Dropbox/Calum/1.Work/LSHTM/Professional Dev/calumdavey.github.io/files/Migration/Graph.Rmd')
nrow(data_women)
install.packages('rvest')
library(rvest)
url <- 'https://www.ghanaweb.com/GhanaHomePage/communication/radio.php
''
'
url <- 'https://www.ghanaweb.com/GhanaHomePage/communication/radio.php'
page <- read_html(url)
page <- html(url)
page <- read_html(url)
accra <- html_nodes(page, xpath='//*[@id="medsection1"]/table[1]')
accra
accra <- html_table(html_nodes(page, xpath='//*[@id="medsection1"]/table[1]'))
accra
titles <- seq(3,21,2)
titles
length(s)
length(titles)
ncol(accra)
accra
class(accra)
ncol(accra[[1]])
stations <- matrix(, ncol=5,nrow=0)
i <- 1
x <- html_table(html_nodes(page,
xpath=paste0('//*[@id="medsection1"]/table[',i,']')))[[1]]
x
class(x)
t <- html_table(html_nodes(page,
xpath=paste0('//*[@id="medsection1"]/p[',titles[i],']')))[[1]]
?html_text
t <- html_text(html_nodes(page,
xpath=paste0('//*[@id="medsection1"]/p[',titles[i],']')))[[1]]
t
stations <- rbind(stations,
cbind(x, rep(t, times = nrow(x))))
stations
for (i in 1:10){
x <- html_table(html_nodes(page,
xpath=paste0('//*[@id="medsection1"]/table[',i,']')))[[1]]
t <- html_text(html_nodes(page,
xpath=paste0('//*[@id="medsection1"]/p[',titles[i],']')))[[1]]
stations <- rbind(stations,
cbind(x, rep(t, times = nrow(x))))
}
stations <- as.data.frame(stations)
stations
head(stations)
stations <- as.data.frame(stations[,c(1,2,4,5)])
colnames(stations) <- c('Name','Frequency','Location','Region')
library(sp)
admin <- readRDS("gadm36_GHA_1_sp.rds")
setwd("~/Dropbox/Calum/1.Work/LSHTM/Professional Dev/calumdavey.github.io/files/PENDA/Ghana")
admin <- readRDS("gadm36_GHA_1_sp.rds")
plot(admin)
head(admin@data)
ghana <- gUnaryUnion(admin, id=admin@data$ID_0)
?gUnaryUnion
??gUnaryUnion
library(rgeos)
ghana <- gUnaryUnion(admin, id=admin@data$ID_0)
plot(ghana, lwd=2)
plot(admin, add = T)
plot(ghana, lwd=2)
ghana <- gSimplify(spgeom=ghana, tol=.08)
plot(ghana)
plot(ghana, lwd = 3)
plot(admin, add = T)
ghana <- gSimplify(spgeom=ghana, tol=.03)
plot(ghana, lwd = 3)
plot(admin, add = T)
ghana <- gUnaryUnion(admin, id=admin@data$ID_0)
ghana <- gSimplify(spgeom=ghana, tol=.03)
plot(ghana, lwd = 3)
plot(admin, add = T)
par(mar = c(1,1,1,1))
plot(ghana, lwd = 3)
plot(admin, add = T)
nrow(stations)
table(stations$Region)
table(stations$Location)
?aggregate
nstations <- aggregate(stations$Name, by=stations$Region, sum(unique()))
nstations <- aggregate(stations$Name, by=stations$Region, function(x) sum(unique(x)))
nstations <- aggregate(stations$Name, by=list(stations$Region), function(x) sum(unique(x)))
stations$id <- seq(1,nrow(stations),1)
nstations <- aggregate(stations$id, by=list(stations$Region), length)
nstations
head(admin@data)
admin@data <- merge(admin@data, nstations, by.x=c('NAME_1'), by.y=c('Group.1'),all.x=T)
head(admin@data)
table(admin@data$NAME_1)
table(nstations$Group.1)
